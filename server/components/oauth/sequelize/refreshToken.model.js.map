{"version":3,"sources":["components/oauth/sequelize/refreshToken.model.js"],"names":["moment","require","module","exports","RefreshTokenModel","sequelize","DataTypes","RefreshToken","define","id","type","INTEGER","autoIncrement","primaryKey","allowNull","unique","refreshToken","STRING","validate","len","expires","DATE","defaultValue","setExpires","add","tableName","timestamps","classMethods","associate","db","belongsTo","App","foreignKey","Session","User"],"mappings":";;AAEA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,SAAtC,EAAiD;AAChE,MAAMC,eAAeF,UAAUG,MAAV,CAAiB,cAAjB,EAAiC;AACpDC,QAAI;AACFC,YAAMJ,UAAUK,OAAV,CAAkB,EAAlB,CADJ;AAEFC,qBAAe,IAFb;AAGFC,kBAAY,IAHV;AAIFC,iBAAW,KAJT;AAKFC,cAAQ;AALN,KADgD;AAQpDC,kBAAc;AACZN,YAAMJ,UAAUW,MAAV,CAAiB,GAAjB,CADM;AAEZC,gBAAU;AACRC,aAAK,CAAC,EAAD,EAAK,GAAL;AADG,OAFE;AAKZL,iBAAW;AALC,KARsC;AAepDM,aAAS;AACPV,YAAMJ,UAAUe,IADT;AAEPP,iBAAW,KAFJ;AAGPQ,oBAAc,SAASC,UAAT,GAAsB;AAClC,eAAOvB,SAASwB,GAAT,CAAa,CAAb,EAAgB,QAAhB,CAAP;AACD;AALM;AAf2C,GAAjC,EAsBlB;AACDC,eAAW,gBADV;AAEDC,gBAAY,IAFX;;AAIDC,kBAAc;AACZC,eADY,qBACFC,EADE,EACE;AACZtB,qBAAauB,SAAb,CAAuBD,GAAGE,GAA1B,EAA+B;AAC7BC,sBAAY;AADiB,SAA/B;;AAIAzB,qBAAauB,SAAb,CAAuBD,GAAGI,OAA1B,EAAmC;AACjCD,sBAAY;AADqB,SAAnC;;AAIAzB,qBAAauB,SAAb,CAAuBD,GAAGK,IAA1B,EAAgC;AAC9BF,sBAAY;AADkB,SAAhC;AAGD;AAbW;AAJb,GAtBkB,CAArB;;AA2CA,SAAOzB,YAAP;AACD,CA7CD","file":"refreshToken.model.js","sourcesContent":["\n\nconst moment = require('moment');\n\nmodule.exports = function RefreshTokenModel(sequelize, DataTypes) {\n  const RefreshToken = sequelize.define('RefreshToken', {\n    id: {\n      type: DataTypes.INTEGER(14),\n      autoIncrement: true,\n      primaryKey: true,\n      allowNull: false,\n      unique: true,\n    },\n    refreshToken: {\n      type: DataTypes.STRING(256),\n      validate: {\n        len: [10, 256],\n      },\n      allowNull: false,\n    },\n    expires: {\n      type: DataTypes.DATE,\n      allowNull: false,\n      defaultValue: function setExpires() {\n        return moment().add(1, 'months');\n      },\n    },\n  }, {\n    tableName: 'refresh_tokens',\n    timestamps: true,\n\n    classMethods: {\n      associate(db) {\n        RefreshToken.belongsTo(db.App, {\n          foreignKey: 'appId',\n        });\n\n        RefreshToken.belongsTo(db.Session, {\n          foreignKey: 'sessionId',\n        });\n\n        RefreshToken.belongsTo(db.User, {\n          foreignKey: 'userId',\n        });\n      },\n    },\n  });\n\n  return RefreshToken;\n};\n"]}