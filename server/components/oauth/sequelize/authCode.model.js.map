{"version":3,"sources":["components/oauth/sequelize/authCode.model.js"],"names":["moment","require","module","exports","AuthCodeModel","sequelize","DataTypes","AuthCode","define","id","type","INTEGER","autoIncrement","primaryKey","allowNull","unique","authCode","STRING","validate","len","expires","DATE","defaultValue","setExpires","add","tableName","timestamps","classMethods","associate","db","belongsTo","App","foreignKey","Session","User"],"mappings":";;AAEA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AAC5D,MAAMC,WAAWF,UAAUG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,QAAI;AACFC,YAAMJ,UAAUK,OAAV,CAAkB,EAAlB,CADJ;AAEFC,qBAAe,IAFb;AAGFC,kBAAY,IAHV;AAIFC,iBAAW,KAJT;AAKFC,cAAQ;AALN,KADwC;AAQ5CC,cAAU;AACRN,YAAMJ,UAAUW,MAAV,CAAiB,GAAjB,CADE;AAERC,gBAAU;AACRC,aAAK,CAAC,EAAD,EAAK,GAAL;AADG,OAFF;AAKRL,iBAAW;AALH,KARkC;AAe5CM,aAAS;AACPV,YAAMJ,UAAUe,IADT;AAEPP,iBAAW,KAFJ;AAGPQ,oBAAc,SAASC,UAAT,GAAsB;AAClC,eAAOvB,SAASwB,GAAT,CAAa,EAAb,EAAiB,SAAjB,CAAP;AACD;AALM;AAfmC,GAA7B,EAsBd;AACDC,eAAW,YADV;AAEDC,gBAAY,IAFX;;AAIDC,kBAAc;AACZC,eADY,qBACFC,EADE,EACE;AACZtB,iBAASuB,SAAT,CAAmBD,GAAGE,GAAtB,EAA2B;AACzBC,sBAAY;AADa,SAA3B;;AAIAzB,iBAASuB,SAAT,CAAmBD,GAAGI,OAAtB,EAA+B;AAC7BD,sBAAY;AADiB,SAA/B;;AAIAzB,iBAASuB,SAAT,CAAmBD,GAAGK,IAAtB,EAA4B;AAC1BF,sBAAY;AADc,SAA5B;AAGD;AAbW;AAJb,GAtBc,CAAjB;;AA2CA,SAAOzB,QAAP;AACD,CA7CD","file":"authCode.model.js","sourcesContent":["\n\nconst moment = require('moment');\n\nmodule.exports = function AuthCodeModel(sequelize, DataTypes) {\n  const AuthCode = sequelize.define('AuthCode', {\n    id: {\n      type: DataTypes.INTEGER(14),\n      autoIncrement: true,\n      primaryKey: true,\n      allowNull: false,\n      unique: true,\n    },\n    authCode: {\n      type: DataTypes.STRING(256),\n      validate: {\n        len: [10, 256],\n      },\n      allowNull: false,\n    },\n    expires: {\n      type: DataTypes.DATE,\n      allowNull: false,\n      defaultValue: function setExpires() {\n        return moment().add(30, 'seconds');\n      },\n    },\n  }, {\n    tableName: 'auth_codes',\n    timestamps: true,\n\n    classMethods: {\n      associate(db) {\n        AuthCode.belongsTo(db.App, {\n          foreignKey: 'appId',\n        });\n\n        AuthCode.belongsTo(db.Session, {\n          foreignKey: 'sessionId',\n        });\n\n        AuthCode.belongsTo(db.User, {\n          foreignKey: 'userId',\n        });\n      },\n    },\n  });\n\n  return AuthCode;\n};\n"]}