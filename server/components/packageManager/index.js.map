{"version":3,"sources":["components/packageManager/index.js"],"names":["PackageManager","activePackages","userId","packageTypeId","UserPackage","findAll","attributes","where","order","packageUsage","userPackageId","Transaction","Sequelize","fn","col","group","then","packagesUsage","result","forEach","id","usage","filter","x","length","toJSON","count","availableLimit","reject","message","map","uP","userPackage","used"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,iBAAiB;AACrBC,gBADqB,0BACNC,MADM,EACEC,aADF,EACiB;AACpC,WAAO,gBAAGC,WAAH,CACJC,OADI,CACI;AACPC,kBAAY,CAAC,WAAD,EAAc,IAAd,EAAoB,eAApB,CADL;AAEPC,aAAO,EAAEJ,4BAAF,EAAiBD,cAAjB,EAFA;AAGPM,aAAO,CAAC,CAAC,WAAD,EAAc,MAAd,CAAD;AAHA,KADJ,CAAP;AAMD,GARoB;AASrBC,cATqB,wBASRC,aATQ,EASOR,MATP,EASe;AAClC,WAAO,gBAAGS,WAAH,CAAeN,OAAf,CAAuB;AAC5BC,kBAAY,CAAC,eAAD,EACV,CAAC,gBAAGM,SAAH,CAAaC,EAAb,CAAgB,OAAhB,EAAyB,gBAAGD,SAAH,CAAaE,GAAb,CAAiB,eAAjB,CAAzB,CAAD,EAA8D,OAA9D,CADU,CADgB;AAG5BP,aAAO,EAAEL,cAAF,EAAUQ,4BAAV,EAHqB;AAI5BK,aAAO;AAJqB,KAAvB,EAKJC,IALI,CAKC,UAACC,aAAD,EAAmB;AACzB,UAAMC,SAAS,EAAf;AACAR,oBAAcS,OAAd,CAAsB,UAACC,EAAD,EAAQ;AAC5B,YAAIC,QAAQJ,cAAcK,MAAd,CAAqB;AAAA,iBAAMC,EAAEb,aAAF,KAAoBU,EAA1B;AAAA,SAArB,CAAZ;AACA,YAAIC,MAAMG,MAAV,EAAkBH,QAAQA,MAAM,CAAN,EAASI,MAAT,EAAR,CAAlB,KACKJ,QAAQ,EAAEK,OAAO,CAAT,EAAR;AACLR,eAAOE,EAAP,IAAaC,MAAMK,KAAnB;AACD,OALD;AAMA,aAAOR,MAAP;AACD,KAdM,CAAP;AAeD,GAzBoB;AA0BrBS,gBA1BqB,0BA0BNzB,MA1BM,EA0BEC,aA1BF,EA0BiB;AACpC,WAAOH,eAAeC,cAAf,CAA8BC,MAA9B,EAAsCC,aAAtC,EACJa,IADI,CACC,UAACf,cAAD,EAAoB;AACxB,UAAI,CAACA,eAAeuB,MAApB,EAA4B,OAAO,kBAAQI,MAAR,CAAe,EAAEC,SAAS,uBAAX,EAAf,CAAP;AAC5B,aAAO7B,eAAeS,YAAf,CAA4BR,eAAe6B,GAAf,CAAmB;AAAA,eAAKP,EAAEH,EAAP;AAAA,OAAnB,CAA5B,EAA2DlB,MAA3D,EACJc,IADI,CACC;AAAA,eAAiBf,eAAe6B,GAAf,CAAmB,UAACC,EAAD,EAAQ;AAChD,cAAMC,cAAcD,GAAGN,MAAH,EAApB;AACAO,sBAAYC,IAAZ,GAAmBhB,cAAce,YAAYZ,EAA1B,CAAnB;AACA,iBAAOY,WAAP;AACD,SAJsB,CAAjB;AAAA,OADD,CAAP;AAMD,KATI,CAAP;AAUD;AArCoB,CAAvB;;kBAwCehC,c","file":"index.js","sourcesContent":["import db from '../../conn/sqldb';\n\nconst PackageManager = {\n  activePackages(userId, packageTypeId) {\n    return db.UserPackage\n      .findAll({\n        attributes: ['allocated', 'id', 'packageTypeId'],\n        where: { packageTypeId, userId },\n        order: [['createdAt', 'DESC']],\n      });\n  },\n  packageUsage(userPackageId, userId) {\n    return db.Transaction.findAll({\n      attributes: ['userPackageId',\n        [db.Sequelize.fn('COUNT', db.Sequelize.col('userPackageId')), 'count']],\n      where: { userId, userPackageId },\n      group: 'userPackageId',\n    }).then((packagesUsage) => {\n      const result = {};\n      userPackageId.forEach((id) => {\n        let usage = packagesUsage.filter(x => (x.userPackageId === id));\n        if (usage.length) usage = usage[0].toJSON();\n        else usage = { count: 0 };\n        result[id] = usage.count;\n      });\n      return result;\n    });\n  },\n  availableLimit(userId, packageTypeId) {\n    return PackageManager.activePackages(userId, packageTypeId)\n      .then((activePackages) => {\n        if (!activePackages.length) return Promise.reject({ message: 'No Package Available.' });\n        return PackageManager.packageUsage(activePackages.map(x => x.id), userId)\n          .then(packagesUsage => activePackages.map((uP) => {\n            const userPackage = uP.toJSON();\n            userPackage.used = packagesUsage[userPackage.id];\n            return userPackage;\n          }));\n      });\n  },\n};\n\nexport default PackageManager;\n"]}