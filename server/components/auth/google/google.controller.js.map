{"version":3,"sources":["components/auth/google/google.controller.js"],"names":["login","callback","req","res","path","auth","google","scope","redirect_uri","client_id","writeHead","Location","end","method","uri","headers","form","grant_type","client_secret","code","query","json","then","Authorization","token","access_token","resolve","user","gender","emails","id","displayName","image","url","email","filter","x","type","value","googleId","name","link","googleToken","PLAY_URL","body","catch","console","log","err"],"mappings":";;;;;;;;;;;;;;QAGgBA,K,GAAAA,K;QASAC,Q,GAAAA,Q;;AAZhB;;;;AACA;;;;;;AAEO,SAASD,KAAT,CAAeE,GAAf,EAAoBC,GAApB,EAAyB;AAC9B,MAAMC,OAAO,iFACF,cAAIC,IAAJ,CAASC,MAAT,CAAgBC,KADd,0CAEX,cAAIF,IAAJ,CAASC,MAAT,CAAgBE,YAFL,mBAE+B,cAAIH,IAAJ,CAASC,MAAT,CAAgBG,SAF/C,kCAAb;AAIAN,MAAIO,SAAJ,CAAc,GAAd,EAAmB,EAAEC,UAAUP,IAAZ,EAAnB;AACA,SAAOD,IAAIS,GAAJ,EAAP;AACD;;AAEM,SAASX,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACjC,SAAO,8BAAG;AACRU,YAAQ,MADA;AAERC,SAAK,4CAFG;AAGRC,aAAS,EAAE,gBAAgB,mCAAlB,EAHD;AAIRC,UAAM;AACJC,kBAAY,oBADR;AAEJT,oBAAc,cAAIH,IAAJ,CAASC,MAAT,CAAgBE,YAF1B;AAGJC,iBAAW,cAAIJ,IAAJ,CAASC,MAAT,CAAgBG,SAHvB;AAIJS,qBAAe,cAAIb,IAAJ,CAASC,MAAT,CAAgBY,aAJ3B;AAKJC,YAAMjB,IAAIkB,KAAJ,CAAUD;AALZ,KAJE;AAWRE,UAAM;AAXE,GAAH,EAaJC,IAbI,CAaC;AAAA,WACJ,8BAAG;AACDT,cAAQ,KADP;AAEDC,WAAK,8CAFJ;AAGDC,eAAS,EAAEQ,2BAAyBC,MAAMC,YAAjC,EAHR;AAIDJ,YAAM;AAJL,KAAH,EAKGC,IALH,CAKQ;AAAA,aAAQ,kBAAQI,OAAR,CAAgB,CAACF,KAAD,EAAQG,IAAR,CAAhB,CAAR;AAAA,KALR,CADI;AAAA,GAbD,EAoBJL,IApBI,CAoBC,gBAA8E;AAAA;AAAA,QAA5EE,KAA4E;AAAA;AAAA,QAAnEI,MAAmE,UAAnEA,MAAmE;AAAA,QAA3DC,MAA2D,UAA3DA,MAA2D;AAAA,QAAnDC,EAAmD,UAAnDA,EAAmD;AAAA,QAA/CC,WAA+C,UAA/CA,WAA+C;AAAA,QAApBC,KAAoB,UAAlCA,KAAkC,CAAzBC,GAAyB;AAAA,QAAXA,GAAW,UAAXA,GAAW;;AAClF,QAAMN,OAAO;AACXC,oBADW;AAEXM,aAAOL,OAAOM,MAAP,CAAc;AAAA,eAAMC,EAAEC,IAAF,KAAW,SAAjB;AAAA,OAAd,EAA2C,CAA3C,EAA8CC,KAF1C;AAGXC,gBAAUT,EAHC;AAIXU,YAAMT,WAJK;AAKXC,kBALW;AAMXS,YAAMR,GANK;AAOXS,mBAAalB;AAPF,KAAb;AASA,WAAO,8BAAG;AACRX,cAAQ,MADA;AAERC,WAAQ,cAAI6B,QAAZ,2BAFQ;AAGR5B,eAAS,EAAEQ,eAAe,yCAAjB,EAHD;AAIRqB,YAAMjB,IAJE;AAKRN,YAAM;AALE,KAAH,CAAP;AAOD,GArCI,EAsCJC,IAtCI,CAsCC;AAAA,WAASnB,IAAIkB,IAAJ,CAASG,KAAT,CAAT;AAAA,GAtCD,EAuCJqB,KAvCI,CAuCE;AAAA,WAAOC,QAAQC,GAAR,CAAYC,GAAZ,CAAP;AAAA,GAvCF,CAAP;AAwCD","file":"google.controller.js","sourcesContent":["import rp from 'request-promise';\nimport env from '../../../config/env';\n\nexport function login(req, res) {\n  const path = 'https://accounts.google.com/o/oauth2/v2/auth?response_type=code&' +\n    `scope=${env.auth.google.scope}&access_type=offline&redirect_uri=${\n    env.auth.google.redirect_uri}&client_id=${env.auth.google.client_id\n  }&include_granted_scopes=true`;\n  res.writeHead(302, { Location: path });\n  return res.end();\n}\n\nexport function callback(req, res) {\n  return rp({\n    method: 'POST',\n    uri: 'https://www.googleapis.com/oauth2/v4/token',\n    headers: { 'content-type': 'application/x-www-form-urlencoded' },\n    form: {\n      grant_type: 'authorization_code',\n      redirect_uri: env.auth.google.redirect_uri,\n      client_id: env.auth.google.client_id,\n      client_secret: env.auth.google.client_secret,\n      code: req.query.code,\n    },\n    json: true,\n  })\n    .then(token =>\n      rp({\n        method: 'GET',\n        uri: 'https://www.googleapis.com/plus/v1/people/me',\n        headers: { Authorization: `Bearer ${token.access_token}` },\n        json: true,\n      }).then(user => Promise.resolve([token, user])))\n    .then(([token, { gender, emails, id, displayName, image: { url: image }, url }]) => {\n      const user = {\n        gender,\n        email: emails.filter(x => (x.type === 'account'))[0].value,\n        googleId: id,\n        name: displayName,\n        image,\n        link: url,\n        googleToken: token,\n      };\n      return rp({\n        method: 'POST',\n        uri: `${env.PLAY_URL}/api/users/googleLogin`,\n        headers: { Authorization: 'Bearer eGNsaWVudGlkOnhjbGllbnRzZWNyZXQ=' },\n        body: user,\n        json: true,\n      });\n    })\n    .then(token => res.json(token))\n    .catch(err => console.log(err));\n}\n"]}