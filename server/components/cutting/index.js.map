{"version":3,"sources":["components/cutting/index.js"],"names":["Cutting","selectNumbers","list","userId","packageTypeId","PackageType","find","where","id","then","userPackageType","reject","message","all","availableLimit","User","attributes","name","PriorityNumber","findAll","number","packages","u","pL","user","toJSON","priorityList","map","x","totalAvailable","reduce","total","item","allocated","used","length","startFrom","allow","block","forEach","includes","push","shift","cuttingPoint","percent","splice"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,UAAU;AACdC,eADc,yBACAC,IADA,EACMC,MADN,EACcC,aADd,EAC6B;AACzC,WAAO,gBAAGC,WAAH,CAAeC,IAAf,CAAoB,EAAEC,OAAO,EAAEC,IAAIJ,aAAN,EAAT,EAApB,EACJK,IADI,CACC,UAACC,eAAD,EAAqB;AACzB,UAAI,CAACA,eAAL,EAAsB,OAAO,kBAAQC,MAAR,CAAe,EAAEC,SAAS,sBAAX,EAAf,CAAP;AACtB,aAAO,kBAAQC,GAAR,CAAY,CACjB,yBAAeC,cAAf,CAA8BX,MAA9B,EAAsCC,aAAtC,CADiB,EAEjB,gBAAGW,IAAH,CAAQT,IAAR,CAAa;AACXU,oBAAY,CAAC,IAAD,EACV,CAAIN,gBAAgBO,IAApB,gBAAqC,WAArC,CADU,EAEV,CAAIP,gBAAgBO,IAApB,cAAmC,SAAnC,CAFU,CADD;AAIXV,eAAO,EAAEC,IAAIL,MAAN;AAJI,OAAb,CAFiB,EAQjB,gBAAGe,cAAH,CAAkBC,OAAlB,CAA0B,EAAEH,YAAY,CAAC,QAAD,CAAd,EAA0BT,OAAO,EAAEa,QAAQlB,IAAV,EAAjC,EAA1B,CARiB,CAAZ,EASJO,IATI,CASC,gBAAuB;AAAA;AAAA,YAArBY,QAAqB;AAAA,YAAXC,CAAW;AAAA,YAARC,EAAQ;;AAC7B,YAAMC,OAAOF,EAAEG,MAAF,EAAb;AACA,YAAMC,eAAeH,GAAGI,GAAH,CAAO;AAAA,iBAAKC,EAAEH,MAAF,GAAWL,MAAhB;AAAA,SAAP,CAArB;AACA,YAAMS,iBAAiBR,SACpBS,MADoB,CACb,UAACC,KAAD,EAAQC,IAAR;AAAA,iBAAkBD,QAAQC,KAAKC,SAAb,GAAyBD,KAAKE,IAAhD;AAAA,SADa,EAC0C,CAD1C,CAAvB;AAEA,YAAIL,iBAAiB3B,KAAKiC,MAA1B,EAAkC,OAAO,kBAAQxB,MAAR,CAAe,EAAEC,SAAS,iBAAX,EAAf,CAAP;AAClC,YAAIV,KAAKiC,MAAL,IAAeX,KAAKY,SAAxB,EAAmC,OAAOlC,IAAP;AACnC,YAAMmC,QAAQ,EAAd;AACA,YAAMC,QAAQ,EAAd;AACApC,aAAKqC,OAAL,CAAa;AAAA,iBAAMb,aAAac,QAAb,CAAsBZ,CAAtB,IAA2BS,MAAMI,IAAN,CAAWb,CAAX,CAA3B,GAA2CU,MAAMG,IAAN,CAAWb,CAAX,CAAjD;AAAA,SAAb;AACA,eAAOS,MAAMF,MAAN,GAAeX,KAAKY,SAApB,IAAiCC,MAAMF,MAAN,KAAiBjC,KAAKiC,MAA9D,EAAsE;AACpEE,gBAAMI,IAAN,CAAWH,MAAMI,KAAN,EAAX;AACD;AACD,YAAIJ,MAAMH,MAAV,EAAkB;AAChB,cAAMQ,eAAeL,MAAMH,MAAN,GAAgBG,MAAMH,MAAN,GAAeX,KAAKoB,OAArB,GAAgC,GAApE;AACAN,gBAAMO,MAAN,CAAa,CAAb,EAAgBF,YAAhB,EAA8BJ,OAA9B,CAAsC;AAAA,mBAAKF,MAAMI,IAAN,CAAWb,CAAX,CAAL;AAAA,WAAtC;AACD;AACD,eAAO,EAAES,YAAF,EAASC,YAAT,EAAP;AACD,OA3BM,CAAP;AA4BD,KA/BI,CAAP;AAgCD;AAlCa,CAAhB;;kBAqCetC,O","file":"index.js","sourcesContent":["import db from '../../conn/sqldb';\nimport PackageManager from '../packageManager';\n\nconst Cutting = {\n  selectNumbers(list, userId, packageTypeId) {\n    return db.PackageType.find({ where: { id: packageTypeId } })\n      .then((userPackageType) => {\n        if (!userPackageType) return Promise.reject({ message: 'Invalid Package Type' });\n        return Promise.all([\n          PackageManager.availableLimit(userId, packageTypeId),\n          db.User.find({\n            attributes: ['id',\n              [`${userPackageType.name}StartFrom`, 'startFrom'],\n              [`${userPackageType.name}Percent`, 'percent']],\n            where: { id: userId },\n          }),\n          db.PriorityNumber.findAll({ attributes: ['number'], where: { number: list } }),\n        ]).then(([packages, u, pL]) => {\n          const user = u.toJSON();\n          const priorityList = pL.map(x => x.toJSON().number);\n          const totalAvailable = packages\n            .reduce((total, item) => (total + item.allocated - item.used), 0);\n          if (totalAvailable < list.length) return Promise.reject({ message: 'Limit Exceeded.' });\n          if (list.length <= user.startFrom) return list;\n          const allow = [];\n          const block = [];\n          list.forEach(x => (priorityList.includes(x) ? allow.push(x) : block.push(x)));\n          while (allow.length < user.startFrom && allow.length !== list.length) {\n            allow.push(block.shift());\n          }\n          if (block.length) {\n            const cuttingPoint = block.length - (block.length * user.percent) / 100;\n            block.splice(0, cuttingPoint).forEach(x => allow.push(x));\n          }\n          return { allow, block };\n        });\n      });\n  },\n};\n\nexport default Cutting;\n"]}