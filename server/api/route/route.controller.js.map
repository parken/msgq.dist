{"version":3,"sources":["api/route/route.controller.js"],"names":["activeUpstream","index","show","create","update","destroy","ADMIN","req","res","next","user","roleId","routeId","params","Upstream","scope","find","where","then","id","json","catch","Route","findAll","routes","map","x","toJSON","filter","route","balance","credits","query","limit","offset","fl","options","attributes","split","Number","reduce","nxt","key","value","all","count","numFound","items","meta","findById","body","createdBy","updatedBy","status","active","end"],"mappings":"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","file":"route.controller.js","sourcesContent":["\nimport { getRouteType } from '../../conn/sqldb/helper';\nimport db from '../../conn/sqldb/index';\nimport { ROLES } from '../../config/constants';\n\nconst { ADMIN } = ROLES;\n\nexport function activeUpstream(req, res, next) {\n  if (req.user.roleId !== ADMIN) return next();\n  const { routeId } = req.params;\n  return db.Upstream\n    .scope('active')\n    .find({ where: { routeId } })\n    .then(({ id }) => res.json({ id }))\n    .catch(next);\n}\n\nexport function index(req, res, next) {\n  if (req.user.roleId !== ADMIN) {\n    return db.Route.findAll()\n      .then(routes => res.json(routes.map(x => x.toJSON()).filter(x => {\n        const route = x;\n        route.balance = req.user[`sendingBalance${getRouteType(x.id)}`];\n        route.credits = req.user[`sellingBalance${getRouteType(x.id)}`];\n        return route.balance;\n      })))\n      .catch(next);\n  }\n\n  const { limit = 20, offset = 0, fl, where } = req.query;\n\n  const options = {\n    attributes: fl ? fl.split(',') : ['id', 'name'],\n    limit: Number(limit),\n    offset: Number(offset),\n  };\n\n  if (where) {\n    options.where = where.split(',').reduce((nxt, x) => {\n      const [key, value] = x.split(':');\n      return Object.assign(nxt, { [key]: value });\n    }, {});\n  }\n\n  return Promise\n    .all([\n      db.Route\n        .findAll(options),\n      db.Route\n        .count(),\n    ])\n    .then(([routes, numFound]) => res.json({ items: routes, meta: { numFound } }))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  return db.Route\n    .findById(req.params.id)\n    .then(route => res.json(route))\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  return db.Route\n    .create(Object.assign({}, req.body, {\n      createdBy: req.user.id,\n      updatedBy: req.user.id,\n    }))\n    .then(({ id }) => res.status(201).json({ id }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  return db.Route\n    .update(\n      Object.assign({}, req.body, {\n        active: false,\n        updatedBy: req.user.id,\n      }),\n      { where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\nexport function destroy(req, res, next) {\n  return db.Route\n    .destroy({ where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n"]}