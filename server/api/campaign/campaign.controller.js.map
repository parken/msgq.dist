{"version":3,"sources":["api/campaign/campaign.controller.js"],"names":["index","show","create","update","destroy","req","res","next","query","limit","offset","fl","where","options","attributes","split","Number","userId","user","id","reduce","nxt","x","key","value","all","Campaign","findAll","count","then","routes","numFound","json","items","meta","catch","find","$or","params","name","MessageFly","campaignId","campaign","order","include","SenderId","resolve","messageFly","senderId","routeId","groupIds","numbers","toJSON","body","createdBy","updatedBy","status","active","end"],"mappings":"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","file":"campaign.controller.js","sourcesContent":["import db from '../../conn/sqldb';\n\nexport function index(req, res, next) {\n  const { limit = 20, offset = 0, fl, where } = req.query;\n\n  const options = {\n    attributes: fl ? fl.split(',') : ['id', 'name'],\n    limit: Number(limit),\n    offset: Number(offset),\n    where: { userId: req.user.id },\n  };\n\n  if (where) {\n    options.where = where.split(',').reduce((nxt, x) => {\n      const [key, value] = x.split(':');\n      return Object.assign(nxt, { [key]: value });\n    }, options.where);\n  }\n\n  return Promise\n    .all([\n      db.Campaign.findAll(options),\n      db.Campaign.count(),\n    ])\n    .then(([routes, numFound]) => res.json({ items: routes, meta: { numFound } }))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  return db.Campaign\n    .find({\n      attributes: ['id', 'name'],\n      where: {\n        $or: [{ id: req.params.id }, { name: req.params.id }],\n        userId: req.user.id,\n      },\n    })\n    .then(campaign => db.MessageFly\n      .find({\n        where: { campaignId: campaign.id },\n        order: [['createdAt', 'DESC']],\n        include: [db.SenderId],\n      }).then(messageFly => Promise.resolve([campaign, messageFly])))\n    .then(([campaign, { SenderId: { name: senderId }, routeId, groupIds, numbers }]) =>\n      res.json(Object.assign(campaign.toJSON(), { groupIds, numbers, senderId, routeId })))\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  return db.Campaign\n    .create(Object.assign({}, req.body, {\n      createdBy: req.user.id,\n      updatedBy: req.user.id,\n    }))\n    .then(({ id }) => res.status(201).json({ id }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  return db.Campaign\n    .update(\n      Object.assign({}, req.body, {\n        active: false,\n        updatedBy: req.user.id,\n      }),\n      { where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\nexport function destroy(req, res, next) {\n  return db.Campaign\n    .destroy({ where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\n"]}