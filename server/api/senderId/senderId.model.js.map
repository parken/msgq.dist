{"version":3,"sources":["api/senderId/senderId.model.js"],"names":["sequelize","DataTypes","SenderId","define","id","type","INTEGER","allowNull","primaryKey","autoIncrement","name","STRING","blockReason","company","message","tableName","timestamps","paranoid","classMethods","associate","db","belongsTo","User","foreignKey","as","Upstream","SenderIdStatus","defaultValue"],"mappings":";;;;;;kBAAe,UAAUA,SAAV,EAAqBC,SAArB,EAAgC;AAC7C,MAAMC,WAAWF,UAAUG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,QAAI;AACFC,YAAMJ,UAAUK,OADd;AAEFC,iBAAW,KAFT;AAGFC,kBAAY,IAHV;AAIFC,qBAAe;AAJb,KADwC;AAO5CC,UAAMT,UAAUU,MAP4B;AAQ5CC,iBAAaX,UAAUU,MARqB;AAS5CE,aAASZ,UAAUU,MATyB;AAU5CG,aAASb,UAAUU;AAVyB,GAA7B,EAWd;AACDI,eAAW,YADV;AAEDC,gBAAY,IAFX;AAGDC,cAAU,IAHT;AAIDC,kBAAc;AACZC,eADY,qBACFC,EADE,EACE;AACZlB,iBAASmB,SAAT,CAAmBD,GAAGE,IAAtB,EAA4B;AAC1BC,sBAAY,WADc;AAE1BhB,qBAAW,KAFe;AAG1BiB,cAAI;AAHsB,SAA5B;AAKAtB,iBAASmB,SAAT,CAAmBD,GAAGE,IAAtB,EAA4B;AAC1BC,sBAAY,WADc;AAE1BhB,qBAAW,KAFe;AAG1BiB,cAAI;AAHsB,SAA5B;AAKAtB,iBAASmB,SAAT,CAAmBD,GAAGK,QAAtB,EAAgC;AAC9BF,sBAAY,YADkB;AAE9BhB,qBAAW;AAFmB,SAAhC;AAIAL,iBAASmB,SAAT,CAAmBD,GAAGM,cAAtB,EAAsC;AACpCH,sBAAY,kBADwB;AAEpChB,qBAAW,KAFyB;AAGpCoB,wBAAc;AAHsB,SAAtC;AAKD;AArBW;AAJb,GAXc,CAAjB;;AAwCA,SAAOzB,QAAP;AACD,C","file":"senderId.model.js","sourcesContent":["export default function (sequelize, DataTypes) {\n  const SenderId = sequelize.define('SenderId', {\n    id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    name: DataTypes.STRING,\n    blockReason: DataTypes.STRING,\n    company: DataTypes.STRING,\n    message: DataTypes.STRING,\n  }, {\n    tableName: 'sender_ids',\n    timestamps: true,\n    paranoid: true,\n    classMethods: {\n      associate(db) {\n        SenderId.belongsTo(db.User, {\n          foreignKey: 'createdBy',\n          allowNull: false,\n          as: 'CreatedBy',\n        });\n        SenderId.belongsTo(db.User, {\n          foreignKey: 'updatedBy',\n          allowNull: false,\n          as: 'UpdatedBy',\n        });\n        SenderId.belongsTo(db.Upstream, {\n          foreignKey: 'upstreamId',\n          allowNull: false,\n        });\n        SenderId.belongsTo(db.SenderIdStatus, {\n          foreignKey: 'senderIdStatusId',\n          allowNull: false,\n          defaultValue: 1,\n        });\n      },\n    },\n  });\n\n  return SenderId;\n}\n"]}