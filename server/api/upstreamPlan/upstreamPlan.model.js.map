{"version":3,"sources":["api/upstreamPlan/upstreamPlan.model.js"],"names":["sequelize","DataTypes","UpstreamPlan","define","id","type","INTEGER","allowNull","primaryKey","autoIncrement","count","tableName","timestamps","paranoid","classMethods","associate","db","belongsTo","User","foreignKey","Upstream","hooks","afterCreate","instance","find","upstreamId","then","all","upstream","increment","balance","Sending","create","limit","createdBy","updatedBy","userId","routeId","catch","error","err"],"mappings":";;;;;;;;;;kBAGe,UAAUA,SAAV,EAAqBC,SAArB,EAAgC;AAC7C,MAAMC,eAAeF,UAAUG,MAAV,CAAiB,cAAjB,EAAiC;AACpDC,QAAI;AACFC,YAAMJ,UAAUK,OADd;AAEFC,iBAAW,KAFT;AAGFC,kBAAY,IAHV;AAIFC,qBAAe;AAJb,KADgD;AAOpDC,WAAOT,UAAUK;AAPmC,GAAjC,EAQlB;AACDK,eAAW,gBADV;AAEDC,gBAAY,IAFX;AAGDC,cAAU,IAHT;AAIDC,kBAAc;AACZC,eADY,qBACFC,EADE,EACE;AACZd,qBAAac,EAAb,GAAkBA,EAAlB;AACAd,qBAAae,SAAb,CAAuBD,GAAGE,IAA1B,EAAgC;AAC9BC,sBAAY,WADkB;AAE9BZ,qBAAW;AAFmB,SAAhC;AAIAL,qBAAae,SAAb,CAAuBD,GAAGE,IAA1B,EAAgC;AAC9BC,sBAAY,WADkB;AAE9BZ,qBAAW;AAFmB,SAAhC;AAIAL,qBAAae,SAAb,CAAuBD,GAAGI,QAA1B,EAAoC;AAClCD,sBAAY,YADsB;AAElCZ,qBAAW;AAFuB,SAApC;AAID;AAfW,KAJb;AAqBDc,WAAO;AACLC,iBADK,uBACOC,QADP,EACiB;AACpB,YAAMP,KAAKd,aAAac,EAAxB;AACA,eAAOA,GAAGI,QAAH,CAAYI,IAAZ,CAAiB,EAAEpB,IAAImB,SAASE,UAAf,EAAjB,EACJC,IADI,CACC;AAAA,iBAAY,kBAAQC,GAAR,CAAY,CAC5BC,SAASC,SAAT,CAAmB,EAAEC,SAASP,SAASb,KAApB,EAAnB,CAD4B,EAE5BM,GAAGe,OAAH,CAAWC,MAAX,CAAkB;AAChBC,mBAAOV,SAASb,KADA;AAEhBwB,uBAAWX,SAASW,SAFJ;AAGhBC,uBAAWZ,SAASY,SAHJ;AAIhBC,oBAAQ,CAJQ;AAKhBC,qBAAST,SAASS;AALF,WAAlB,CAF4B,CAAZ,CAAZ;AAAA,SADD,EAWJC,KAXI,CAWE;AAAA,iBAAO,iBAAOC,KAAP,CAAaC,GAAb,CAAP;AAAA,SAXF,CAAP;AAYD;AAfI;AArBN,GARkB,CAArB;;AAgDA,SAAOtC,YAAP;AACD,C;;AApDD","file":"upstreamPlan.model.js","sourcesContent":["\nimport logger from '../../components/logger';\n\nexport default function (sequelize, DataTypes) {\n  const UpstreamPlan = sequelize.define('UpstreamPlan', {\n    id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    count: DataTypes.INTEGER,\n  }, {\n    tableName: 'upstream_plans',\n    timestamps: true,\n    paranoid: true,\n    classMethods: {\n      associate(db) {\n        UpstreamPlan.db = db;\n        UpstreamPlan.belongsTo(db.User, {\n          foreignKey: 'createdBy',\n          allowNull: false,\n        });\n        UpstreamPlan.belongsTo(db.User, {\n          foreignKey: 'updatedBy',\n          allowNull: false,\n        });\n        UpstreamPlan.belongsTo(db.Upstream, {\n          foreignKey: 'upstreamId',\n          allowNull: false,\n        });\n      },\n    },\n    hooks: {\n      afterCreate(instance) {\n        const db = UpstreamPlan.db;\n        return db.Upstream.find({ id: instance.upstreamId })\n          .then(upstream => Promise.all([\n            upstream.increment({ balance: instance.count }),\n            db.Sending.create({\n              limit: instance.count,\n              createdBy: instance.createdBy,\n              updatedBy: instance.updatedBy,\n              userId: 1,\n              routeId: upstream.routeId,\n            }),\n          ]))\n          .catch(err => logger.error(err));\n      },\n    },\n  });\n\n  return UpstreamPlan;\n}\n"]}