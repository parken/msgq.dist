{"version":3,"sources":["api/sms/sms.schema.js"],"names":["smsTypes","routes","PLAIN","UNICODE","PROMOTIONAL","TRASACTIONAL","SENDER_ID","OTP","sms","route_id","type","enum","message","campaign_name","maxLength","smsRequired","promotionalSMS","title","properties","mobile_numbers","minLength","required","concat","unicodeSMS","sms_type","default","flashSMS","flash_sms","duplicateSMS","duplicate","signatureSMS","signature","anySMS","oneOf","transactionalSMS","sender_id","groupSMS","group_ids","items","scheduledSMS","scheduled_on","format","csvSMS","mobile_numbers_from_csv","minimum","maximum"],"mappings":"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","file":"sms.schema.js","sourcesContent":["\nimport constants from '../../config/constants';\n\nconst { smsTypes, routes } = constants;\nconst { PLAIN, UNICODE } = smsTypes;\nconst { PROMOTIONAL, TRASACTIONAL, SENDER_ID, OTP } = routes;\n\n// Todo: return error bucket\nexport const sms = {\n  route_id: {\n    type: 'number',\n    enum: [PROMOTIONAL, TRASACTIONAL, SENDER_ID, OTP],\n  },\n  message: {\n    type: 'string',\n  },\n  campaign_name: {\n    type: 'string',\n    maxLength: 255,\n  },\n};\n\nconst smsRequired = ['route_id', 'message'];\n\nexport const promotionalSMS = { // === otp\n  title: 'PromotionalSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers: {\n      type: 'string',\n      minLength: 10,\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers']),\n};\n\nexport const unicodeSMS = {\n  title: 'UnicodeSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers: {\n      type: 'string',\n      minLength: 10,\n    },\n    sms_type: {\n      type: 'number',\n      enum: [PLAIN, UNICODE],\n      default: PLAIN,\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'sms_type']),\n};\n\nexport const flashSMS = {\n  title: 'FlashSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers: {\n      type: 'string',\n      minLength: 10,\n    },\n    flash_sms: {\n      type: 'boolean',\n      default: false,\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'flash_sms']),\n};\n\nexport const duplicateSMS = {\n  title: 'FlashSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers: {\n      type: 'string',\n      minLength: 10,\n    },\n    duplicate: {\n      type: 'boolean',\n      default: false, // if lastmessage == current message\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'duplicate']),\n};\n\nexport const signatureSMS = {\n  title: 'FlashSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers: {\n      type: 'string',\n      minLength: 10,\n    },\n    signature: {\n      type: 'boolean',\n      default: false,\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'signature']),\n};\n\nexport const anySMS = {\n  title: 'AnySMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers: {\n      type: 'string',\n      minLength: 10,\n    },\n  }),\n  oneOf: [\n    { required: smsRequired.concat(['mobile_numbers_from_csv']) },\n    { required: smsRequired.concat(['mobile_numbers']) },\n    { required: smsRequired.concat(['group_ids']) },\n  ],\n};\n\nexport const transactionalSMS = {\n  title: 'TrasactionalSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    sender_id: {\n      type: 'string',\n      minLength: 6,\n      maxLength: 6,\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'sender_id']),\n};\n\nexport const groupSMS = {\n  title: 'GroupSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    group_ids: {\n      type: 'array',\n      items: {\n        type: 'number',\n      },\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'group_ids']),\n};\n\nexport const scheduledSMS = {\n  title: 'ScheduledSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    scheduled_on: {\n      type: 'string',\n      format: 'date-time',\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers', 'scheduled_on']),\n};\n\nexport const csvSMS = {\n  title: 'CSVSMS',\n  type: 'object',\n  properties: Object.assign(sms, {\n    mobile_numbers_from_csv: {\n      type: 'array',\n      items: {\n        type: 'number',\n        minimum: 7000000000,\n        maximum: 9999999999,\n        // pattern: '^[789]\\\\d{9},' pattern works with strings\n      },\n    },\n  }),\n  required: smsRequired.concat(['mobile_numbers_from_csv']),\n};\n\n"]}