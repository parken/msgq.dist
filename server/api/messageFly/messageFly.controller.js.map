{"version":3,"sources":["api/messageFly/messageFly.controller.js"],"names":["index","last","show","create","update","destroy","ADMIN","req","res","next","user","roleId","MessageFly","findAll","attributes","where","userId","id","include","model","SenderId","Campaign","then","json","data","catch","query","limit","offset","fl","options","split","Number","reduce","nxt","x","key","value","all","count","routes","numFound","items","meta","findById","params","route","body","createdBy","updatedBy","status","active","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAKgBA,K,GAAAA,K;QA4CAC,I,GAAAA,I;QAgBAC,I,GAAAA,I;QAOAC,M,GAAAA,M;QAUAC,M,GAAAA,M;QAYAC,O,GAAAA,O;;AA9FhB;;AAGA;;;;;;IADQC,K,oBAAAA,K;AAGD,SAASN,KAAT,CAAeO,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACpC,MAAIF,IAAIG,IAAJ,CAASC,MAAT,KAAoBL,KAAxB,EAA+B;AAC7B,WAAO,gBAAGM,UAAH,CACJC,OADI,CACI;AACPC,kBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,UAAf,EAA2B,SAA3B,EAAsC,OAAtC,EAA+C,SAA/C,EAA0D,MAA1D,EAAkE,SAAlE,EACV,OADU,EACD,aADC,CADL;AAGPC,aAAO,EAAEC,QAAQT,IAAIG,IAAJ,CAASO,EAAnB,EAHA;AAIPC,eAAS,CACP,EAAEJ,YAAY,CAAC,IAAD,EAAO,MAAP,CAAd,EAA8BK,OAAO,gBAAGP,UAAxC,EADO,EAEP,EAAEE,YAAY,CAAC,IAAD,EAAO,MAAP,CAAd,EAA8BK,OAAO,gBAAGC,QAAxC,EAFO,EAGP,EAAEN,YAAY,CAAC,IAAD,EAAO,MAAP,CAAd,EAA8BK,OAAO,gBAAGE,QAAxC,EAHO;AAJF,KADJ,EAWJC,IAXI,CAWC;AAAA,aAAQd,IAAIe,IAAJ,CAASC,IAAT,CAAR;AAAA,KAXD,EAYJC,KAZI,CAYEhB,IAZF,CAAP;AAaD;;AAfmC,mBAiBUF,IAAImB,KAjBd;AAAA,oCAiB5BC,KAjB4B;AAAA,MAiB5BA,KAjB4B,oCAiBpB,EAjBoB;AAAA,qCAiBhBC,MAjBgB;AAAA,MAiBhBA,MAjBgB,qCAiBP,CAjBO;AAAA,MAiBJC,EAjBI,cAiBJA,EAjBI;AAAA,MAiBAd,KAjBA,cAiBAA,KAjBA;;;AAmBpC,MAAMe,UAAU;AACdhB,gBAAYe,KAAKA,GAAGE,KAAH,CAAS,GAAT,CAAL,GAAqB,CAAC,IAAD,EAAO,MAAP,EAAe,UAAf,EAA2B,SAA3B,EAAsC,OAAtC,EAA+C,SAA/C,EAA0D,MAA1D,EAAkE,SAAlE,EAC/B,OAD+B,EACtB,aADsB,CADnB;AAGdJ,WAAOK,OAAOL,KAAP,CAHO;AAIdC,YAAQI,OAAOJ,MAAP;AAJM,GAAhB;;AAOA,MAAIb,KAAJ,EAAW;AACTe,YAAQf,KAAR,GAAgBA,MAAMgB,KAAN,CAAY,GAAZ,EAAiBE,MAAjB,CAAwB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAAA,qBAC7BA,EAAEJ,KAAF,CAAQ,GAAR,CAD6B;AAAA;AAAA,UAC3CK,GAD2C;AAAA,UACtCC,KADsC;;AAElD,aAAO,sBAAcH,GAAd,oCAAsBE,GAAtB,EAA4BC,KAA5B,EAAP;AACD,KAHe,EAGb,EAHa,CAAhB;AAID;;AAED,SAAO,kBACJC,GADI,CACA,CACH,gBAAG1B,UAAH,CACGC,OADH,CACWiB,OADX,CADG,EAGH,gBAAGlB,UAAH,CACG2B,KADH,EAHG,CADA,EAOJjB,IAPI,CAOC;AAAA;AAAA,QAAEkB,MAAF;AAAA,QAAUC,QAAV;;AAAA,WAAwBjC,IAAIe,IAAJ,CAAS,EAAEmB,OAAOF,MAAT,EAAiBG,MAAM,EAAEF,kBAAF,EAAvB,EAAT,CAAxB;AAAA,GAPD,EAQJhB,KARI,CAQEhB,IARF,CAAP;AASD;;AAEM,SAASR,IAAT,CAAcM,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACnC,SAAO,gBAAGG,UAAH,CACJC,OADI,CACI;AACPC,gBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,UAAf,EAA2B,SAA3B,EAAsC,OAAtC,EAA+C,SAA/C,EAA0D,MAA1D,EAAkE,SAAlE,EACV,OADU,EACD,aADC,CADL;AAGPC,WAAO,EAAEC,QAAQT,IAAIG,IAAJ,CAASO,EAAnB,EAHA;AAIPC,aAAS,CACP,EAAEJ,YAAY,CAAC,IAAD,EAAO,MAAP,CAAd,EAA8BK,OAAO,gBAAGP,UAAxC,EADO,EAEP,EAAEE,YAAY,CAAC,IAAD,EAAO,MAAP,CAAd,EAA8BK,OAAO,gBAAGC,QAAxC,EAFO,EAGP,EAAEN,YAAY,CAAC,IAAD,EAAO,MAAP,CAAd,EAA8BK,OAAO,gBAAGE,QAAxC,EAHO;AAJF,GADJ,EAWJC,IAXI,CAWC;AAAA,WAAQd,IAAIe,IAAJ,CAASC,IAAT,CAAR;AAAA,GAXD,EAYJC,KAZI,CAYEhB,IAZF,CAAP;AAaD;;AAEM,SAASP,IAAT,CAAcK,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACnC,SAAO,gBAAGG,UAAH,CACJgC,QADI,CACKrC,IAAIsC,MAAJ,CAAW5B,EADhB,EAEJK,IAFI,CAEC;AAAA,WAASd,IAAIe,IAAJ,CAASuB,KAAT,CAAT;AAAA,GAFD,EAGJrB,KAHI,CAGEhB,IAHF,CAAP;AAID;;AAEM,SAASN,MAAT,CAAgBI,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrC,SAAO,gBAAGG,UAAH,CACJT,MADI,CACG,sBAAc,EAAd,EAAkBI,IAAIwC,IAAtB,EAA4B;AAClCC,eAAWzC,IAAIG,IAAJ,CAASO,EADc;AAElCgC,eAAW1C,IAAIG,IAAJ,CAASO;AAFc,GAA5B,CADH,EAKJK,IALI,CAKC;AAAA,QAAGL,EAAH,SAAGA,EAAH;AAAA,WAAYT,IAAI0C,MAAJ,CAAW,GAAX,EAAgB3B,IAAhB,CAAqB,EAAEN,MAAF,EAArB,CAAZ;AAAA,GALD,EAMJQ,KANI,CAMEhB,IANF,CAAP;AAOD;;AAEM,SAASL,MAAT,CAAgBG,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrC,SAAO,gBAAGG,UAAH,CACJR,MADI,CAEH,sBAAc,EAAd,EAAkBG,IAAIwC,IAAtB,EAA4B;AAC1BI,YAAQ,KADkB;AAE1BF,eAAW1C,IAAIG,IAAJ,CAASO;AAFM,GAA5B,CAFG,EAMH,EAAEF,OAAO,EAAEE,IAAIV,IAAIsC,MAAJ,CAAW5B,EAAjB,EAAT,EANG,EAOJK,IAPI,CAOC;AAAA,WAAMd,IAAI0C,MAAJ,CAAW,GAAX,EAAgBE,GAAhB,EAAN;AAAA,GAPD,EAQJ3B,KARI,CAQEhB,IARF,CAAP;AASD;;AAEM,SAASJ,OAAT,CAAiBE,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACtC,SAAO,gBAAGG,UAAH,CACJP,OADI,CACI,EAAEU,OAAO,EAAEE,IAAIV,IAAIsC,MAAJ,CAAW5B,EAAjB,EAAT,EADJ,EAEJK,IAFI,CAEC;AAAA,WAAMd,IAAI0C,MAAJ,CAAW,GAAX,EAAgBE,GAAhB,EAAN;AAAA,GAFD,EAGJ3B,KAHI,CAGEhB,IAHF,CAAP;AAID","file":"messageFly.controller.js","sourcesContent":["import { ROLES } from '../../config/constants';\n\nconst { ADMIN } = ROLES;\nimport db from '../../conn/sqldb';\n\nexport function index(req, res, next) {\n  if (req.user.roleId !== ADMIN) {\n    return db.MessageFly\n      .findAll({\n        attributes: ['id', 'text', 'groupIds', 'numbers', 'total', 'success', 'fail', 'unicode',\n          'flash', 'scheduledOn'],\n        where: { userId: req.user.id },\n        include: [\n          { attributes: ['id', 'name'], model: db.MessageFly },\n          { attributes: ['id', 'name'], model: db.SenderId },\n          { attributes: ['id', 'name'], model: db.Campaign },\n        ],\n      })\n      .then(data => res.json(data))\n      .catch(next);\n  }\n\n  const { limit = 20, offset = 0, fl, where } = req.query;\n\n  const options = {\n    attributes: fl ? fl.split(',') : ['id', 'text', 'groupIds', 'numbers', 'total', 'success', 'fail', 'unicode',\n      'flash', 'scheduledOn'],\n    limit: Number(limit),\n    offset: Number(offset),\n  };\n\n  if (where) {\n    options.where = where.split(',').reduce((nxt, x) => {\n      const [key, value] = x.split(':');\n      return Object.assign(nxt, { [key]: value });\n    }, {});\n  }\n\n  return Promise\n    .all([\n      db.MessageFly\n        .findAll(options),\n      db.MessageFly\n        .count(),\n    ])\n    .then(([routes, numFound]) => res.json({ items: routes, meta: { numFound } }))\n    .catch(next);\n}\n\nexport function last(req, res, next) {\n  return db.MessageFly\n    .findAll({\n      attributes: ['id', 'text', 'groupIds', 'numbers', 'total', 'success', 'fail', 'unicode',\n        'flash', 'scheduledOn'],\n      where: { userId: req.user.id },\n      include: [\n        { attributes: ['id', 'name'], model: db.MessageFly },\n        { attributes: ['id', 'name'], model: db.SenderId },\n        { attributes: ['id', 'name'], model: db.Campaign },\n      ],\n    })\n    .then(data => res.json(data))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  return db.MessageFly\n    .findById(req.params.id)\n    .then(route => res.json(route))\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  return db.MessageFly\n    .create(Object.assign({}, req.body, {\n      createdBy: req.user.id,\n      updatedBy: req.user.id,\n    }))\n    .then(({ id }) => res.status(201).json({ id }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  return db.MessageFly\n    .update(\n      Object.assign({}, req.body, {\n        active: false,\n        updatedBy: req.user.id,\n      }),\n      { where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\nexport function destroy(req, res, next) {\n  return db.MessageFly\n    .destroy({ where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n"]}