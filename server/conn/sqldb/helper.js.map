{"version":3,"sources":["conn/sqldb/helper.js"],"names":["Sequelize","require","DataTypes","module","exports","engine","charset","keys","model","type","INTEGER","references","key","onUpdate","onDelete","timestamps","options","createdAt","DATE","defaultValue","literal","updatedAt","deletedAt","getRouteType","routeId"],"mappings":";;AAAA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AAEA,IAAMC,YAAYF,UAAUE,SAA5B;;AAEAC,OAAOC,OAAP,GAAiB;AACfC,UAAQ;AACNA,YAAQ,QADF;AAENC,aAAS;AAFH,GADO;AAKfC,MALe,gBAKVC,KALU,EAKH;AACV,WAAO;AACLC,YAAMP,UAAUQ,OADX;AAELC,kBAAY;AACVH,oBADU;AAEVI,aAAK;AAFK,OAFP;AAMLC,gBAAU,SANL;AAOLC,gBAAU;AAPL,KAAP;AASD,GAfc;AAgBfC,YAhBe,sBAgBJN,IAhBI,EAgBE;AACf,QAAMO,UAAU;AACdC,iBAAW;AACTR,cAAMT,UAAUkB,IADP;AAETC,sBAAcnB,UAAUoB,OAAV,CAAkB,mBAAlB;AAFL;AADG,KAAhB;;AAOA,QAAIX,QAAQ,CAAZ,EAAe;AACbO,cAAQK,SAAR,GAAoB;AAClBZ,cAAMT,UAAUkB,IADE;AAElBC,sBAAcnB,UAAUoB,OAAV,CAAkB,+CAAlB;AAFI,OAApB;AAID;;AAED,QAAIX,QAAQ,CAAZ,EAAe;AACbO,cAAQM,SAAR,GAAoB;AAClBb,cAAMT,UAAUkB,IADE;AAElBC,sBAAc;AAFI,OAApB;AAID;;AAED,WAAOH,OAAP;AACD,GAvCc;AAwCfO,cAxCe,wBAwCFC,OAxCE,EAwCO;AACpB,YAAQA,OAAR;AACE,WAAK,CAAL;AAAQ,eAAO,aAAP;AACR,WAAK,CAAL;AAAQ,eAAO,eAAP;AACR,WAAK,CAAL;AAAQ,eAAO,UAAP;AACR;AAAS,eAAO,KAAP;AAJX;AAMD;AA/Cc,CAAjB","file":"helper.js","sourcesContent":["const Sequelize = require('sequelize');\n\nconst DataTypes = Sequelize.DataTypes;\n\nmodule.exports = {\n  engine: {\n    engine: 'InnoDB',\n    charset: 'utf8mb4',\n  },\n  keys(model) {\n    return {\n      type: DataTypes.INTEGER,\n      references: {\n        model,\n        key: 'id',\n      },\n      onUpdate: 'cascade',\n      onDelete: 'cascade',\n    };\n  },\n  timestamps(type) {\n    const options = {\n      createdAt: {\n        type: Sequelize.DATE,\n        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),\n      },\n    };\n\n    if (type >= 2) {\n      options.updatedAt = {\n        type: Sequelize.DATE,\n        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),\n      };\n    }\n\n    if (type >= 3) {\n      options.deletedAt = {\n        type: Sequelize.DATE,\n        defaultValue: null,\n      };\n    }\n\n    return options;\n  },\n  getRouteType(routeId) {\n    switch (routeId) {\n      case 1: return 'Promotional';\n      case 2: return 'Transactional';\n      case 3: return 'SenderId';\n      default: return 'OTP';\n    }\n  },\n};\n"]}